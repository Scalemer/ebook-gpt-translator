name: Python EpubLoader Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-root

    - name: Copy input.epub and config.yaml
      run: |
        mkdir -p output/${{ secrets.CN_TITLE }}
        wget https://pub-2df73a5be14443b7aa337f4ab7085b03.r2.dev/input.epub -O output/${{ secrets.CN_TITLE }}/input.epub
        sed -i 's/POE-API-KEY/'"${{ secrets.POE_API_KEY }}"'/g' translation.yaml.example
        sed -i 's/GOOGLE-API-KEY/'"${{ secrets.GOOGLE_API_KEY }}"'/g' translation.yaml.example
        mv translation.yaml.example translation.yaml
        sed -i 's/CN-TITLE/'"${{ secrets.CN_TITLE }}"'/g' .env.example
        sed -i 's/JP-TITLE/'"${{ secrets.JP_TITLE }}"'/g' .env.example
        sed -i 's/TRANSLATION-TITLE_RETRY-COUNT/'"${{ secrets.TRANSLATION_TITLE_RETRY_COUNT }}"'/g' .env.example
        mv .env.example .env
      # Make sure to replace 'path/to/your/input.epub' and 'path/to/your/config.yaml'
      # with the actual paths to the files in your repository or set up to receive them as inputs.

    - name: Run epubloader.py script
      run: |
        python epubloader.py
